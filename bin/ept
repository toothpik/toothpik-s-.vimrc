#!/usr/bin/perl
#  examine previous transactions - designed for gas and electric but works on anything
#####################################################################
#  WARNING:  BREAK THIS SCRIPT AND I WILL COME BACK AND HAUNT YOU  ##
#####################################################################
$na = @ARGV;
if ($na == 0) {
    $t = 'Power & Light';
} elsif ($ARGV[0] eq 'g') {
    $t = 'Gas Energy|Spire';
} else {
    $t = "$ARGV[0]";
}

$h = $ENV{'HOME'};
$bcnt = 0;
$ycnt = 0;
$h1 = "   ";
$s1 = "%2d)";
$s2 = "   ";
$e1 = "   ";
$p1 = "   printf \"\$s1\n\", \$m";
$p2 = "printf \"\$s2\n\"";

#  the following for() determines the width of the output
#  can start as early as 2004 - go as late as the latest plan
for ($y = 2004; $y < 2020; $y++) {

    ++$ycnt;

    $h1 = $h1 . "    $y";
    $s1 = $s1 . "  %6.2f";
    $s2 = $s2 . " %7.2f";
    $e1 = $e1 . "  ======";
    $p1 = $p1 . ", \$table{\"$y-\" . \"\$m\"}";
    $p2 = $p2 . ", \$table{\"$y-tot\"}";

    $F = "$h/txt/plan_$y";
    $sof = open(PLN, "<$F");
    if (!$sof) {
        die "cannot open $F";
    }
    $tot = 0;
    $cnt = 0;
    while ($_ = <PLN>) {
        chop;
        if (/^-----------/) {
            ++$cnt;
        }
        if (/$t/) {
            $tr = substr($_, 47, 10);
            $tr =~ s/ //g;
            $tot += $tr;
            $table{"$y". "-" . "$cnt"} = $tr;
        }
    }
    close(PLN);
   if ($cnt > $bcnt) {
       $bcnt = $cnt;
    }
    $table{"$y" . "-tot"} = $tot;
}

$ma = 7 + 4 * $ycnt;
$p3 = "printf \"%${ma}s\n\", \$t";
eval("$p3");
print "$h1\n";
for ($m = 1; $m < $bcnt; $m++) {
    eval("$p1");
}
print "$e1\n";
eval("$p2");
